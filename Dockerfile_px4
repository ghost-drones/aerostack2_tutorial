FROM osrf/ros:humble-desktop

WORKDIR /root/

RUN apt-get update
RUN apt-get install apt-utils software-properties-common -y


RUN apt install git tmux tmuxinator -y
## ROS2 utils

RUN apt-get install python3-rosdep  \
                python3-pip     \
                python3-colcon-common-extensions \
                python3-colcon-mixin \
                ros-dev-tools -y

RUN apt-get install python3-flake8 \
                python3-flake8-builtins  \
                python3-flake8-comprehensions \
                python3-flake8-docstrings \
                python3-flake8-import-order \
                python3-flake8-quotes -y

RUN pip3 install pylint
RUN pip3 install flake8==4.0.1
RUN pip3 install pycodestyle==2.8
RUN pip3 install cmakelint cpplint

RUN apt-get install cppcheck lcov -y

RUN colcon mixin update default
RUN rm -rf log # remove log folder

RUN pip3 install colcon-lcov-result cpplint cmakelint
RUN pip3 install PySimpleGUI-4-foss

RUN mkdir -p /root/aerostack2_ws/src/
WORKDIR /root/aerostack2_ws/src/

# Agent forwarding during docker build https://stackoverflow.com/questions/43418188/ssh-agent-forwarding-during-docker-build

ENV DOCKER_BUILDKIT=1
RUN apt-get install -y openssh-client
ENV GIT_SSH_COMMAND="ssh -v"
USER root

RUN mkdir -p -m 0600 ~/.ssh/ && ssh-keyscan github.com >> ~/.ssh/known_hosts
ARG HOME=/root

RUN --mount=type=ssh git clone git@github.com:ghost-drones/aerostack2.git -b add_gripper_to_gazebo

WORKDIR /root/aerostack2_ws
RUN rosdep update
RUN rosdep fix-permissions
RUN rosdep install --from-paths src --ignore-src -r -y

RUN sudo apt-get install ignition-fortress -y
RUN export GZ_VERSION=fortress
RUN . /opt/ros/$ROS_DISTRO/setup.sh && colcon build --symlink-install --parallel-workers 3 --cmake-args -DCMAKE_BUILD_TYPE=Release

RUN sudo apt install ros-humble-mavros ros-humble-mavros-extras -y 
RUN wget https://raw.githubusercontent.com/mavlink/mavros/ros2/mavros/scripts/install_geographiclib_datasets.sh
RUN chmod +x install_geographiclib_datasets.sh
RUN ./install_geographiclib_datasets.sh

RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> ~/.bashrc
RUN echo 'export AEROSTACK2_PATH=/root/aerostack2_ws/src/aerostack2' >> ~/.bashrc
RUN echo 'source $AEROSTACK2_PATH/as2_cli/setup_env.bash' >> ~/.bashrc

# Clone project gazebo
RUN git clone https://github.com/aerostack2/project_gazebo.git ../project_gazebo

# Clone project mavlink
RUN git clone git clone https://github.com/aerostack2/project_mavlink.git ../project_mavlink

WORKDIR $HOME
RUN mkdir -p tutorials/src
WORKDIR $HOME/tutorials/src
RUN --mount=type=ssh git clone -b build_worlds git@github.com:ghost-drones/aerostack2_tutorial.git
RUN --mount=type=ssh git clone git@github.com:mgonzs13/yolo_ros.git
RUN pip3 install -r yolo_ros/requirements.txt
WORKDIR $HOME/tutorials
RUN rosdep install --from-paths src --ignore-src -r -y
RUN . /opt/ros/$ROS_DISTRO/setup.sh && colcon build --symlink-install --parallel-workers 3
RUN pip3 install numpy==1.24.4

RUN echo "source /root/tutorials/install/setup.bash" >> ~/.bashrc
RUN echo "export AEROSTACK2_TUTORIAL_PATH=/root/tutorials/src/aerostack2_tutorial" >> ~/.bashrc

COPY to_copy/tmux $HOME/.tmux.conf
COPY to_copy/aliases $HOME/.bash_aliases
RUN echo 'export GZ_SIM_RESOURCE_PATH=$GZ_SIM_RESOURCE_PATH:/root/tutorials/src/aerostack2_tutorial/models' >> ~/.bashrc

# Clone px4 autopilot
WORKDIR /root/
RUN git clone https://github.com/PX4/PX4-Autopilot.git -b v1.14.3 --recursive
WORKDIR /root/PX4-Autopilot/

# Upgrading the system
RUN apt update && apt upgrade -y
RUN apt-get install wget -y

# Install dependencies
RUN ./Tools/setup/ubuntu.sh --no-nuttx
RUN make px4_sitl
RUN pip3 install numpy==1.24.4

CMD ["bash"]